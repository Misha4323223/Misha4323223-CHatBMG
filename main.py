from flask import Flask, request, jsonify
import asyncio
import os

app = Flask(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è EdgeGPT
EMAIL = os.getenv("CHATGPT_EMAIL")
PASSWORD = os.getenv("CHATGPT_PASSWORD")
bot = None

async def init_chatgpt():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EdgeGPT –±–æ—Ç–∞"""
    global bot
    try:
        from EdgeGPT import Chatbot
        
        # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –±–µ–∑ cookies —Ñ–∞–π–ª–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ)
        bot = Chatbot()
        print(f"‚úÖ EdgeGPT —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º: {EMAIL}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ EdgeGPT: {e}")
        return False

@app.route("/api/chatgpt", methods=["POST"])
def chatgpt_endpoint():
    global bot
    
    data = request.get_json()
    message = data.get("message", "")
    
    if not message:
        return jsonify({"success": False, "error": "–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"})

    async def get_response():
        global bot
        try:
            # –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
            if bot is None:
                success = await init_chatgpt()
                if not success:
                    return {"success": False, "error": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ ChatGPT"}
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            response = await bot.ask(prompt=message)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
            if response and 'item' in response:
                messages = response['item']['messages']
                if messages:
                    last_message = messages[-1]
                    if 'adaptiveCards' in last_message:
                        text = last_message['adaptiveCards'][0]['body'][0]['text']
                        return {
                            "success": True, 
                            "response": text,
                            "provider": "EdgeGPT (Real ChatGPT)",
                            "model": "gpt-4"
                        }
            
            return {"success": False, "error": "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç ChatGPT"}
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ EdgeGPT: {e}")
            return {"success": False, "error": f"–û—à–∏–±–∫–∞ ChatGPT: {str(e)}"}

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    result = loop.run_until_complete(get_response())
    loop.close()
    
    return jsonify(result)

@app.route("/api/chatgpt/status", methods=["GET"])
def chatgpt_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ ChatGPT"""
    global bot
    
    status = {
        "connected": bot is not None,
        "email": EMAIL if EMAIL else "–ù–µ –∑–∞–¥–∞–Ω",
        "password_set": bool(PASSWORD)
    }
    
    return jsonify(status)

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ EdgeGPT —Å–µ—Ä–≤–µ—Ä–∞...")
    print(f"üìß Email: {EMAIL}")
    print(f"üîë Password: {'‚úì –ó–∞–¥–∞–Ω' if PASSWORD else '‚úó –ù–µ –∑–∞–¥–∞–Ω'}")
    app.run(host="0.0.0.0", port=3000, debug=True)