import { getSystemStatus } from './server/hybrid-image-generator.js';

async function testHybridSystem() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≥–∏–±—Ä–∏–¥–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...\n');
  
  try {
    const status = await getSystemStatus();
    
    console.log('=== STABLE DIFFUSION WEBUI ===');
    console.log('–°—Ç–∞—Ç—É—Å:', status.stableDiffusion.status);
    console.log('–°–æ–æ–±—â–µ–Ω–∏–µ:', status.stableDiffusion.message);
    
    if (status.stableDiffusion.instructions) {
      console.log('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:');
      status.stableDiffusion.instructions.forEach(instruction => {
        console.log(' ', instruction);
      });
    }
    
    console.log('\n=== POLLINATIONS.AI ===');
    console.log('–°—Ç–∞—Ç—É—Å:', status.pollinations.status);
    console.log('–°–æ–æ–±—â–µ–Ω–∏–µ:', status.pollinations.message);
    
    console.log('\n=== –õ–û–ö–ê–õ–¨–ù–´–ô –†–ï–î–ê–ö–¢–û–† ===');
    console.log('–°—Ç–∞—Ç—É—Å:', status.localEditor.status);
    console.log('–°–æ–æ–±—â–µ–Ω–∏–µ:', status.localEditor.message);
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error.message);
  }
}

testHybridSystem();