#!/usr/bin/env python3
"""
–ü–æ–∏—Å–∫ —Ä–∞–±–æ—á–∏—Ö Gradio Spaces –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
"""

from gradio_client import Client

# –°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø—É–±–ª–∏—á–Ω—ã—Ö Spaces –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
spaces_to_test = [
    "Salesforce/BLIP",
    "microsoft/DialoGPT-medium",
    "huggingface/CodeBERTa-small-v1",
    "facebook/detr-resnet-50",
    "google/vit-base-patch16-224",
    "stabilityai/stable-diffusion-2-1",
    "runwayml/stable-diffusion-v1-5",
    "CompVis/stable-diffusion-v1-4"
]

working_spaces = []

for space in spaces_to_test:
    try:
        print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º {space}...")
        client = Client(space)
        working_spaces.append(space)
        print(f"‚úÖ {space} —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å API –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        try:
            api_info = client.view_api()
            print(f"üìã –ú–µ—Ç–æ–¥—ã: {len(api_info)} –¥–æ—Å—Ç—É–ø–Ω—ã")
        except:
            print("üìã API –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            
    except Exception as e:
        print(f"‚ùå {space}: {str(e)[:100]}...")

print(f"\nüéâ –ù–∞–π–¥–µ–Ω–æ —Ä–∞–±–æ—á–∏—Ö Spaces: {len(working_spaces)}")
for space in working_spaces:
    print(f"  ‚úÖ {space}")