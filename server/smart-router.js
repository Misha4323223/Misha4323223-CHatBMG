/**
 * –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ g4f-provider.js
 */

const express = require('express');
const router = express.Router();

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ g4f-provider.js —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ Qwen, Phind, Gemini
const g4fProvider = require('./g4f-provider');

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
 */
async function analyzeMessage(message, options = {}) {
  try {
    console.log('üß† –£–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è:', message.substring(0, 50) + '...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º g4f-provider –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
    const response = await g4fProvider.getResponse(message, { 
      provider: 'auto',
      ...options 
    });
    
    if (response && response.response) {
      return {
        success: true,
        response: response.response,
        provider: response.provider || 'G4F',
        category: 'general'
      };
    } else {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —É–º–Ω–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞:', error);
    return {
      success: false,
      error: error.message,
      response: '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.'
    };
  }
}

// API —Ä–æ—É—Ç –¥–ª—è —É–º–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
router.post('/analyze', async (req, res) => {
  try {
    const { message, options = {} } = req.body;
    
    if (!message) {
      return res.status(400).json({
        success: false,
        error: '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º'
      });
    }
    
    const result = await analyzeMessage(message, options);
    res.json(result);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ API —É–º–Ω–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞:', error);
    res.status(500).json({
      success: false,
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'
    });
  }
});

module.exports = router;
module.exports.analyzeMessage = analyzeMessage;