/**
 * –ü—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è BOOOMERANGS
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–∞–¥–µ–∂–Ω—ã–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
 * @param {string} prompt - –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {string} style - –°—Ç–∏–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è 
 * @returns {Promise<{success: boolean, imageUrl: string}>}
 */
async function generateImage(prompt, style = 'realistic') {
  console.log(`üé® –°–æ–∑–¥–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: "${prompt}"`);
  
  try {
    // –£–ª—É—á—à–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
    let enhancedPrompt = prompt;
    
    if (style === 'artistic' || prompt.toLowerCase().includes('—Ñ—É—Ç–±–æ–ª–∫–∞') || prompt.toLowerCase().includes('–ø—Ä–∏–Ω—Ç')) {
      enhancedPrompt = `Professional t-shirt design, high quality vector graphics, modern streetwear style, clean composition, vibrant colors: ${prompt}`;
    } else if (prompt.toLowerCase().includes('–ª–æ–≥–æ—Ç–∏–ø')) {
      enhancedPrompt = `Professional logo design, clean minimalist style, vector graphics, high contrast: ${prompt}`;
    }
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–æ–º–ø—Ç –æ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
    const cleanPrompt = enhancedPrompt.replace(/[^\w\s\-.,!?]/g, '').trim();
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Pollinations.ai - —Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Å–µ—Ä–≤–∏—Å
    const imageUrl = `https://image.pollinations.ai/prompt/${encodeURIComponent(cleanPrompt)}?width=1024&height=1024&nologo=true&enhance=true&seed=${Date.now()}`;
    
    console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', imageUrl);
    
    return {
      success: true,
      imageUrl: imageUrl
    };
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);
    return {
      success: false,
      error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
    };
  }
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {string} prompt - –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param {number} count - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 3)
 * @returns {Promise<Array>} - –ú–∞—Å—Å–∏–≤ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
async function generateMultipleImages(prompt, count = 3) {
  console.log(`üé® –°–æ–∑–¥–∞—é ${count} –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è`);
  
  const images = [];
  const cleanPrompt = prompt.replace(/[^\w\s\-.,!?]/g, '').trim();
  
  for (let i = 0; i < count; i++) {
    const imageUrl = `https://image.pollinations.ai/prompt/${encodeURIComponent(cleanPrompt)}?width=1024&height=1024&nologo=true&enhance=true&seed=${Date.now() + i}`;
    images.push({
      url: imageUrl,
      variant: i + 1
    });
  }
  
  return images;
}

module.exports = {
  generateImage,
  generateMultipleImages
};