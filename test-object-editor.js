/**
 * –¢–µ—Å—Ç —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
 */

import { addObjectToImage, changeObjectColor, removeObjectByMask, generateVariation, analyzeObjectEdit } from './server/object-manipulation-editor.js';

async function testObjectEditor() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –æ–±—ä–µ–∫—Ç–æ–≤...');
    
    // –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    const testImageUrl = 'https://image.pollinations.ai/prompt/beautiful%20landscape%20with%20trees?width=1024&height=1024&nologo=true&enhance=true&seed=123';
    
    console.log('üì∏ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', testImageUrl);
    
    // –¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
    const testRequests = [
        '–¥–æ–±–∞–≤—å —Å–æ–±–∞–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
        '—É–¥–∞–ª–∏ –¥–µ—Ä–µ–≤–æ',
        '–∏–∑–º–µ–Ω–∏ —Ü–≤–µ—Ç –Ω–∞ –∫—Ä–∞—Å–Ω—ã–π',
        '—Å–¥–µ–ª–∞–π –±–æ–ª–µ–µ —è—Ä–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'
    ];
    
    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞–ø—Ä–æ—Å–æ–≤:');
    for (const request of testRequests) {
        const analysis = analyzeObjectEdit(request);
        console.log(`"${request}" ‚Üí ${analysis.operation} (${analysis.object || analysis.change})`);
    }
    
    // –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞
    console.log('\n‚ûï –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞...');
    try {
        const addResult = await addObjectToImage(testImageUrl, '–∫—Ä–∞—Å–∏–≤–∞—è –±–∞–±–æ—á–∫–∞', 'center');
        console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', addResult.success ? '‚úÖ –£—Å–ø–µ—Ö' : '‚ùå –û—à–∏–±–∫–∞');
        if (addResult.success) {
            console.log('–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', addResult.imageUrl);
        }
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', error.message);
    }
    
    // –¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞
    console.log('\nüé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞...');
    try {
        const colorResult = await changeObjectColor(testImageUrl, '—Å–¥–µ–ª–∞–π –±–æ–ª–µ–µ —Ç–µ–ø–ª—ã–º');
        console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞:', colorResult.success ? '‚úÖ –£—Å–ø–µ—Ö' : '‚ùå –û—à–∏–±–∫–∞');
        if (colorResult.success) {
            console.log('–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', colorResult.imageUrl);
        }
    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testObjectEditor().catch(console.error);