✅ Как правильно реализовать ChatGPT-прокси
Чтобы безопасно интегрировать ChatGPT через access token, вам нужно:

1. Создать сервер-прокси (Node.js, Express):
js
Копировать
Редактировать
// server.js
const express = require('express');
const fetch = require('node-fetch');
const cors = require('cors');

const app = express();
app.use(cors());
app.use(express.json());

const ACCESS_TOKEN = process.env.OPENAI_ACCESS_TOKEN; // храните в .env

app.post('/api/chat', async (req, res) => {
  const userMessage = req.body.message;

  const response = await fetch('https://chat.openai.com/backend-api/conversation', {
    method: 'POST',
    headers: {
      'Authorization': `Bearer ${ACCESS_TOKEN}`,
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      action: "next",
      messages: [
        {
          id: crypto.randomUUID(),
          author: { role: "user" },
          content: { content_type: "text", parts: [userMessage] }
        }
      ],
      model: "text-davinci-002-render-sha",
    }),
  });

  const data = await response.json();
  res.json(data);
});

app.listen(3000, () => console.log("Server running on http://localhost:3000"));
2. В вашем HTML-файле делайте запрос к /api/chat, без токена:
js
Копировать
Редактировать
async function sendToChatGPT() {
  const message = document.getElementById("message").value;
  const responseEl = document.getElementById("response");
  const container = document.getElementById("responseContainer");

  document.getElementById("sendButton").disabled = true;
  responseEl.innerText = "Ожидаем ответ...";
  container.classList.remove("hidden");

  const res = await fetch('http://localhost:3000/api/chat', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ message }),
  });

  const data = await res.json();
  const reply = data?.message?.content?.parts?.[0] || "Ошибка: нет ответа";

  responseEl.innerText = reply;
  document.getElementById("sendButton").disabled = false;
}